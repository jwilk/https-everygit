#!/usr/bin/env perl

# Copyright © 2017 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

use strict;
use warnings;

use Cwd qw();
use English qw(-no_match_vars);
use Fcntl qw(O_RDWR O_CREAT O_EXCL);
use File::Spec ();
use FindBin ();

my $basedir = "$FindBin::Bin/..";
$basedir = Cwd::realpath($basedir);
$basedir = File::Spec->abs2rel($basedir);

if (@ARGV != 1) {
    print { *STDERR } "Usage: $PROGRAM_NAME <repo>\n";
    print { *STDERR } "e.g.:  $PROGRAM_NAME git://git.example.org/foobar.git\n";
    exit 1;
}

my ($src_repo) = @ARGV;
$src_repo =~ m{\A(https?|git)://(([^/]++)\S+)\z} or die "malformed repo URL: $src_repo";
my ($proto, $location, $domain) = ($1, $2, $3);
$proto =~ s/s$//;
my $src = "$proto://$domain/";
my $dst = "https://$domain/";
$src_repo = "$proto://$location";
my $http_repo = "http://$location";
my $dst_repo = "https://$location";

my $path = "$basedir/data/$domain";
sysopen(my $fh, $path, O_RDWR | O_CREAT | O_EXCL) or die "$path: $ERRNO";
print { $fh } <<"EOF" ;
[rules]
$src = $dst

[tests]
$src_repo = $dst_repo
EOF
if ($src_repo ne $http_repo) {
    print { $fh } "$http_repo = $dst_repo\n";
}
print { $fh } "\n# vim:ft=dosini\n";
close($fh) or die "$path: $ERRNO";

# vim:ts=4 sts=4 sw=4 et
